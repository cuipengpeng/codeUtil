静态代码块中使用BuildConfig.DEBUG自动切换服务器地址。依赖gradle配置布尔debug变量，自动切换其他数据
CRUD操作中除了get操作，其他操作都要防止button重复点击.即防止表单重复提交。
网络请求参数Context：用以token失效的页面跳转，或弹出对话框
网络请求响应自定义回调，实现代理.过滤器模式
函数参数：tag.id
与页面生命周期相关的Http请求放baseactivity里用tag统一管理。后台下载请求的除外。
ijk播放视频时包含缩略图的控制层只能new出来，因为一个view只能有一个父容器
所有请求都加token和版本号、IMEI、userId、系统类型、市场渠道：
token用于单设备登陆，
版本号用于强制更新：登陆一定要检查版本更新
app多版本兼容：接口地址v1/v2路径
强制更新.灰度发布(优先级排序：版本号，渠道号，imei号，登陆后的userId、手机型号、生产商vender)
版本管理.分值管理：
master(线上)--release(预发布)--test.dev(测试)
master-->hotfix(热修复)
网络安全：防攻击：签名校验+token校验(ORC图片验证码->短信验证码倒计时)  数据加密：对称加密和非对称加密 排序用treemap 还是compatle，连连支付？ NDK.so库的封装
代码安全：混淆.加固
所有输入框用正则表达式校验
如何防止崩溃日志重复上传？
多线程下载+断点续传--文件上传.断网处理？
文件hasdcode获取
测试环境手动指定服务器地址：便于服务器端问题调试
标准化，自动化，参数化

架构设计：既支持默认统一处理，又支持自定义处理



扫描二维码

http://blog.csdn.net/lmj623565791/article/details/43452969
所有请求都传版本号，便于服务器端调试错误
版本更新，各版本的兼容性：应用启动时，用户登录时
单设备登录.验证请求的合法性：device_token、token
整个应用初始化时的开发.测试.预发.线上环境初始化
debug 版和release版


